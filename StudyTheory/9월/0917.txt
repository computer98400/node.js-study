+추가 오류 수정
전체 제품리스트를 표현하는 부분에서 라우팅이 잘못되어 있었다.

nevigation.ejs 파일에서 나온 문제.
해당 탭을 클릭시 href에 명시된 주소로 연결되어야하는데 routes/shop.js에 파일은
/product-list로 되어있었다.

routes 파일들의 동작 방식은 controllers에 명시된 동작을 수행하게된다.
때문에 controllers와 ejs 파일에 명시된 경로는 같아야 정상이지만
기존의 경우 controllers의 동작과 routes의 동작만 연결되어있었고, nevigation의 경로는 다르게 지정되어있엇다.
해당 경로를 모두 같게 만들어주어 해결할 수 있었다.


routes를 작성할시에 주의할 점.
- 같은 상품에 대해서 두가지 동작을 할 때 우선순위가 높은 순으로 상위에 지정해두어야한다. 
  ex) 상품 삭제, 해당 상품은 검색이 불가능하게 된다. 따라서 해당 상품은 상품검색보다 우선순위가 높다.

----------------------------------------
product-detail 기능 추가
1. 상품에 대한 정보를 더 자세히 추가해야한다.
    -> 상품에 대한 정보는 model/product.js - class를 통해서 받아온다.
    -> model/product.js에서 class내용변경

2. 상품 정보를 전송해준다.
    -> 기존에 views/shop/product-detail.ejs를 만들어두었기 때문에 해당 페이지에 각각의 값을 넣어준다.
    -> routes에 가변 세그먼트를 추가할수있게 구문을 추가해준다.
        ex) 기존 : '/products' 변경 : '/products/:productID'
    -> 해당 변경을 통해 사용자가 선택한 상품의 ID값을 가져올 수 있게된다.
        예상) model/products.json의 내용을 product-detail에 넣어주지않을까싶다.
    -> 동적 세그먼트의 경우 req안에 저장되어있다. params를 통해서 접근하게 된다.

3. 상품 정보를 표현할 ejs파일을 만든다.
    -> 기존에 만들어둔 페이지의 양식에 맞게 데이터를 넘겨주고 표현해준다.
    -> 해당 문제에서 중요한 점은 '양식에 맞는 데이터를 보낸다'이다.
    -> 현재 개발단계에서 views/includes를 통해서 양식을 지정해주었고, 각 head, main, end에 따른 데이터가 필요하다
        ex)head-pageTitle / nevigation-path = ejs를 통해서 데이터를 동적으로 표현하기때문
        
