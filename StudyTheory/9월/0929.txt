ORM = 자바스크립트 객체와 데이터베이스의 릴레이션을 매핑해주는 도구
orm 자체는 매핑처리에 대한 개념이다. 때문에 orm으론 무조건 sequelize를 사용한다라곤 못하게되고
대중적인 언어에는 대부분 orm 기술이 존재한다.
orm을 사용하는 이유는 DBMS에 종속적이지 않다는 장점으로 사용한다.
동시에 단점으론 설계를 완벽하게 해두어야 편리해지며
프로젝트가 복잡할 경우 난이도가 상승하게된다는 단점이있다.

ORM 프레임워크중엔 prisma 그리고 sequelize가 있다.
Node.js에서 가장 많이 사용하며 mysql을 지원하는 프레임워크가 결국 sequelize인것이다.

sequelize
ORM 프레임워크 중 node.js와 연동하여 사용하는 대중적인 orm프레임워크
Promise를 기본으로 지원하게 된다.
자바스크립트 구문을 알아서 sql로 바꿔주는 기능이있다.


prisma
graphQL을 기반으로 하는 ORM프레임워크이다.
graphQL 스키마를 기반으로 DB를 생성하게된다.

해당 프로젝트에서 사용되는 sequelize의 경우
sync를 통해서 테이블을 만들고, 실행했다.
이때 위에 나와있는 특징처럼 promise를 지원하여 만들어졌기때문에
접근하기 쉬운점이있었다.

ORM객체인 만큼 테이블의 생성을 js구문을 통해서 생성하게 되는데
모양은 JSON객체와 비슷하게 보인다.

models/product.js
type : 자료형
autoIncrement : 숫자자동증가
primaryKey: 기본키설정
allowNull : 널값허용

DB를 통해서 가져올때
하나의 데이터를 가져오느냐 혹은 여러개의 데이터를 가져오느냐로 나눌수있다.
이때 하나의 데이터를 가져올시엔 findByPk를 사용하고
여러개의 데이터를 가져올시엔 findAll()을 사용하는데
findAll(where:) 이런식으로 파라미터에 조건을 주어 해당되는 모든 데이터를 가져올수있다.

ejs 사용시에 띄어쓰기로 저번과같은 문제가있었다.
edit-product 부분에서 product.price를 입력시에 공백문자가 포함되어있어 표시가 안되는 오류였고
동시에 input박스 안에 담겨있는 값을 통해서 DB가 변경되는데 처음 들어올때 해당 값이 공백으로 표기되어
sequelize를 사용하여 콘솔에 찍었을때

----------------------------
sql: 'UPDATE `products` SET `title`=?,`price`=?,`description`=?,`updatedAt`=? WHERE `id` 
= ?',  parameters: [ 'a book123', '', ' asdfasdfasdfasdf ', '2021-09-29 06:43:47', 2 ]
-----------------------------
위와 같은 형식으로 표현된다.
not null 형식을 집어넣었기때문에 해당 값이 없으면 실행이 당연히 안되게 된다.

기존에 redirect를 promise문 아래에 작성하게 되면 새로고침을 하지않은 경우 값이 나오지않는다.
이는, 자바스크립트의 비동기 처리때문에 일어나는 일인데
해당 promise문이 모두 실행되고 표현되기 전에 redirect가 일어나기때문이다.

delete에 대한 내용은 혼자서 해결할수있었음.
+ update에 대한 내용이 없어서 이상함.

